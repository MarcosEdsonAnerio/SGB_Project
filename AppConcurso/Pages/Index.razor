@page "/"
@attribute [Authorize]
@inject SGB_Project.Controllers.LivroService LivroService
@inject SGB_Project.Controllers.LeitorService LeitorService
@inject SGB_Project.Controllers.EmprestimoService EmprestimoService
@inject IJSRuntime JS

<div class="container-fluid py-4">
    <div class="text-center mb-5">
        <h1 class="fw-bold">📚 Biblioteca Digital</h1>
        <p class="text-muted">Resumo geral do sistema</p>
    </div>

    @if (carregado)
    {
        <div class="row row-cols-1 row-cols-md-4 g-4">
            <div class="col">
                <div class="card text-white bg-primary shadow rounded-4">
                    <div class="card-body text-center">
                        <h5 class="card-title">Livros</h5>
                        <h1>@totalLivros</h1>
                        <small>No Acervo</small>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card text-white bg-success shadow rounded-4">
                    <div class="card-body text-center">
                        <h5 class="card-title">Leitores</h5>
                        <h1>@totalLeitores</h1>
                        <small>Registrados</small>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card text-white bg-info shadow rounded-4">
                    <div class="card-body text-center">
                        <h5 class="card-title">Empréstimos</h5>
                        <h1>@totalEmprestimos</h1>
                        <small>Ativos</small>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="card text-white bg-danger shadow rounded-4">
                    <div class="card-body text-center">
                        <h5 class="card-title">Atrasados</h5>
                        <h1>@totalAtrasos</h1>
                        <small>Livros</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-5 shadow rounded-4">
            <div class="card-header bg-dark text-white">
                <h5 class="mb-0">📊 Empréstimos nos Últimos 6 Meses</h5>
            </div>
            <div class="card-body">
                <canvas @ref="graficoRef" id="graficoDashboard" width="100%" height="40"></canvas>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Carregando...</span>
            </div>
            <p class="mt-3">Carregando informações...</p>
        </div>
    }
</div>

@code {
    private int totalLivros;
    private int totalLeitores;
    private int totalEmprestimos;
    private int totalAtrasos;
    private bool carregado = false;
    private ElementReference graficoRef;
    private bool jsChamado = false;


    protected override async Task OnInitializedAsync()
    {
        totalLivros = (await LivroService.ListarAsync())?.Count ?? 0;
        totalLeitores = (await LeitorService.ListarAsync())?.Count ?? 0;
        totalEmprestimos = (await EmprestimoService.ListarAsync())?.Count ?? 0;
        totalAtrasos = (await EmprestimoService.BuscarEmprestimosPendentesAsync())?.Count ?? 0;
        carregado = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
{
    if (carregado && !jsChamado)
    {
        if (graficoRef.Context != null)
        {
            var dados = await EmprestimoService.ContarEmprestimosUltimos6MesesAsync();
            await JS.InvokeVoidAsync("renderizarGraficoDashboard", dados);
            jsChamado = true;
        }
    }
}

}
